<?php

namespace Tests\Feature\Order;

use Faker\Generator;
use Illuminate\Support\Facades\DB;
use Tests\TestCase;

class CreateTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp();// TODO: Change the autogenerated stub
        $this->faker = app(Generator::class); //获取Faker\Generator实例 用于数生成据填充
    }

    /**
     * 成功示例
     */
    public function testSucceedCreate()
    {
        $response = $this->json('post', '/api/index/info',
            [
                'status' => 1,
                'recharge_number' => $this->faker->numberBetween(1, 12),
            ],
            ['staff-id' => $this->faker->buildingNumber]);

        dump($response->json());
        $response->assertStatus(200);
    }

    /**
     * 错误示例
     * 状态参数传入错误：传入非指定数值 正确值：-1:1
     */
    public function testErrorCreate()
    {
        $response = $this->json('post', '/api/index/info',
            [
                'status' => 2,
                'recharge_number' => $this->faker->numberBetween(1, 13),
            ],
            ['staff-id' => $this->faker->buildingNumber]);

        dump($response->json());
        $response->assertStatus(200);
    }

    /**
     * FunctionName：testSuccessVersionUpDown
     * Description：测试车型版本 上下架  测试成功
     * Author：zhangkang
     */
    public function testSuccessVersionUpDown()
    {
        $data = [
            'id' => 1
        ];
        $response = $this->json('get', '/api/index/info', $data);
        dump($response->json());
        $this->assertIsInt(DB::table('users')->where($data)->value('id'));
        $response->assertStatus(200);

    }

    /**
     * FunctionName：testErrorVersionUpDown
     * Description：测试车型b版本 上下架  测试失败
     * Author：zhangkang
     */
    public function testErrorVersionUpDown()
    {
        $response = $this->json('get', '/api/index/index');
        dump($response->json());
        $response->assertStatus(200);
        $response->assertJson(['code' => 400200, 'message' => "参数错误", 'data' => [
        ]]);
    }

    /**
     * 会在每个用例之后执行一次此方法
     */
    protected function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }
}
